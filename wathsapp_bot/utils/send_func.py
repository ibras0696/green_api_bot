import asyncio
from collections import defaultdict

from aiohttp import ClientSession
from whatsapp_chatbot_python import Notification

from database.crud import async_add_user, check_subscription
from wathsapp_bot.config import URL_SEND_IMG, URL_SEND_TEXT
from wathsapp_bot.states.user_state import SearchState
from wathsapp_bot.utils.message_text import welcome_message, subscription_is_not_text, commands_text
from wathsapp_bot.utils.movie_pars import pars_json_kino_poisk


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
async def send_message_img(chat_id: str | int = None, image_url: str = None, caption: str = None, session: ClientSession = None) -> bool:
    '''
    –û—Ç–ø—Ä–∞–≤–∫–∞ –û–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: —Ç–µ–∫—Å—Ç–∞, —Ñ–æ—Ç–∫–∏ –ø–æ url –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∞—Ç—Ü–∞–ø
    :param chat_id: –Ω–æ–º–µ—Ä –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–∞–ø—Ä–∏–º–µ—Ä: 79323056361@c.us
    :param image_url: —Å—Å—ã–ª–∫–∞ –Ω–∞ url
    :param caption: –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    :param session: –ê—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –°–µ—Å—Å–∏—è
    :return: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å –µ—Å–ª–∏ –Ω–µ—Ç False
    '''
    payload = {
        "chatId": f"{chat_id}",
        "urlFile": image_url,
        "fileName": 'prosto',
        "caption": caption
    }
    headers = {
        'Content-Type': 'application/json'
    }
    async with session.post(URL_SEND_IMG, headers=headers, json=payload) as response:
        if response.status == 200:
            return True
    return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¢–µ–∫—Å—Ç–∞
async def send_message_text(chat_id: str | int = None, message_text: str = None) -> bool:
    '''
    –û—Ç–ø—Ä–∞–≤–∫–∞ –û–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: —Ç–µ–∫—Å—Ç–∞, —Ñ–æ—Ç–∫–∏ –ø–æ url –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∞—Ç—Ü–∞–ø
    :param chat_id: –Ω–æ–º–µ—Ä –≤–ª–∞–¥–µ–ª—å—Ü–∞ –Ω–∞–ø—Ä–∏–º–µ—Ä: 79323056361@c.us
    :param message_text: –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    :return: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å –µ—Å–ª–∏ –Ω–µ—Ç False
    '''
    payload = {
        "chatId": f"{chat_id}",
        "message": message_text,
    }
    headers = {
        'Content-Type': 'application/json'
    }
    async with ClientSession() as session:
        async with session.post(URL_SEND_TEXT, headers=headers, json=payload) as response:
            if response.status == 200:
                return True
        print(response.status)
        return False


async def send_image_and_message(number_user: int | str, dct_send: dict[str, list]) -> bool | str:
    '''
    –ê—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≤–∞—Ç—Ü–∞–ø
    :param number_user: –ù–æ–º–µ—Ä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞—Ç—Ü–∞–ø
    :param dct_send: –°–ª–æ–≤–∞—Ä—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ new_dct = {
            'movies': [], # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–æ–≤
            'api_urls': [], # url –ø–æ –∞–ø–∏
            'imgs': [] # –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        }
    :return: True –µ—Å–ª–∏ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∏ –û—à–∏–±–∫–∞ –≤ —Å–ª—É—á–∞–µ Exception
    '''
    async with ClientSession() as session:
        try:
            tasks = [send_message_img(chat_id=number_user,
                                  image_url=dct_send['imgs'][i],
                                  caption=f"–§–∏–ª—å–º: {dct_send['movies'][i]}"
                                          f"\n–°—Å—ã–ª–∫–∞: {dct_send['api_urls'][i]}\n",
                                  session=session
                                  ) for i in range(len(dct_send["movies"]))]
            await asyncio.gather(*tasks)
        except Exception as ex:
            return f'–û—à–∏–±–∫–∞: {ex} \n–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å img –≤ –≤–∞—Ç—Ü–∞–ø'
        else:
            return True



async def handle_user_message(sender: str, notification: Notification | None = None) -> None:
    """
    üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ '000':
    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∏ –ø–æ–ª—É—á–∞–µ—Ç 5 –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.
    - –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –µ—Å—Ç—å ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –æ–ø—Ä–æ—Å–Ω–∏–∫.
    - –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –∫—É–ø–∏—Ç—å.

    :param sender: WhatsApp ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '79001234567@c.us')
    :param notification: –û–±—ä–µ–∫—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞)
    """

    # üîÑ –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—ë—Ç False)
    is_new = await async_add_user(whatsapp_id=sender)


    # üéâ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if is_new:
        await send_message_text(sender, welcome_message)
        notification.state_manager.set_state(sender, SearchState.SEARCH)
        return

    # üìå –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ä–æ—Å–Ω–∏–∫
    if notification:
        sender_data = notification.event.get("senderData", {})
        sender_name = sender_data.get("senderName", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

        notification.answer_with_poll(
            f"–ü—Ä–∏–≤–µ—Ç, {sender_name}\n\nüîç –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞",
            [
                {"optionName": "1. –ü–æ–∏—Å–∫ –§–∏–ª—å–º–æ–≤"},
                {"optionName": "2. –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç"},
                {"optionName": "3. –ü–æ–∫—É–ø–∫–∞ –ü–æ–¥–ø–∏—Å–∫–∏"},
            ]
        )


async def process_search(sender: str, query: str, notification: Notification) -> None:
    """
    üîé –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞.

    üìå –§—É–Ω–∫—Ü–∏—è:
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö..."
    - –ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã (–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏)
    - –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –æ–ø—Ä–æ—Å–Ω–∏–∫

    :param sender: WhatsApp ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '79001234567@c.us')
    :param query: –ü–æ–∏—Å–∫–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å (—Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    :param notification: –û–±—ä–µ–∫—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç Green API, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
    """
    has_subscription = await check_subscription(user_id=sender)
    if has_subscription is not True:
        await send_message_text(sender, subscription_is_not_text)
        # ‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
        notification.state_manager.delete_state(sender)
        return

    # ‚è≥ –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ –ø–æ–∏—Å–∫–∞
    await send_message_text(sender, "‚è≥ –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ!")

    try:
        # üì° –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –≤–Ω–µ—à–Ω–µ–≥–æ API/–ø–∞—Ä—Å–µ—Ä–∞
        data = await pars_json_kino_poisk(query)

        # ‚ùå –ï—Å–ª–∏ —Ñ–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        if not data or not data.get("movies"):
            await send_message_text(sender, "üò¢ –§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å")
            return

        # üñº –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –æ–ø–∏—Å–∞–Ω–∏–π
        await send_image_and_message(number_user=sender, dct_send=data)

    except (TypeError, ValueError, AttributeError):
        # üõë –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ –æ—Ç–≤–µ—Ç–µ –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ
        await send_message_text(sender, "üò¢ –§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å")

    finally:
        sender_data = notification.event.get("senderData", {})
        sender_name = sender_data.get("senderName", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        # ‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
        notification.state_manager.delete_state(sender)

        # üìã –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ –º–µ–Ω—é
        notification.answer_with_poll(
            f"–ü—Ä–∏–≤–µ—Ç, {sender_name}\n\nüîç –ú–µ–Ω—é –ë–æ—Ç–∞",
            [
                {"optionName": "1. –ü–æ–∏—Å–∫ –§–∏–ª—å–º–æ–≤"},
                {"optionName": "2. –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç"},
                {"optionName": "3. –ü–æ–∫—É–ø–∫–∞ –ü–æ–¥–ø–∏—Å–∫–∏"},
            ]
        )


# print(asyncio.run(send_message_text('79958042251@c.us', '–π–æ—É')))